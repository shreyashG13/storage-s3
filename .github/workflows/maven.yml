# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # Build Job
  build:
    runs-on: self-hosted
    steps:
    - name: Check if JDK 11 is set up
      id: check-jdk
      run: |
        if java -version 2>&1 | grep -q "11"; then
          echo "::set-output name=setup-needed::false"
        else
          echo "::set-output name=setup-needed::true"
        fi

    - name: Set up JDK 11
      if: steps.check-jdk.outputs.setup-needed == 'true'
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file s3/pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d

  # Deploy Job
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
    - name: Kill previous instance if exists
    run: |
      max_retries=5
      count=0
      while sudo lsof -t -i:443 && [ $count -lt $max_retries ]; do
        echo "Attempting to kill process on port 443. Try #$count"
        sudo kill -9 $(sudo lsof -t -i:443) || true
        count=$((count + 1))
        sleep 5
      done
      if [ $count -eq $max_retries ]; then
        echo "Failed to kill process on port 443 after $max_retries attempts."
        exit 1
      fi

  
    - name: Execute Jar File
      run: sudo java -jar /home/ubuntu/actions-runner/_work/storage-s3/storage-s3/s3/target/s3-0.0.1-SNAPSHOT.jar > app_log.txt 2>&1 &
  
    - name: Monitor Application Logs for Start/Error
      run: |
        timeout_duration=60  # 1 minutes in seconds
        check_interval=10     # check every 10 seconds
        total_wait=0
  
        while [ $total_wait -lt $timeout_duration ]; do
          # Check for your specific startup message. Replace "YourStartupMessageHere" accordingly.
          if grep -q "YourStartupMessageHere" app_log.txt; then
            echo "Application started successfully!"
            exit 0
          fi
          
          # Check for errors or exceptions. Adapt as necessary.
          if grep -E -q "Exception|Error" app_log.txt; then
            echo "Error detected in application logs!"
            tail -n 50 app_log.txt
            exit 1
          fi
  
          sleep $check_interval
          total_wait=$((total_wait + check_interval))
        done
  
        echo "Deployment timeout: Application did not start successfully within 6 minutes."
        tail -n 50 app_log.txt
        exit 1
  
  # Test Job
  test:
    needs: deploy
    runs-on: self-hosted
    steps:
    - name: Test Service
      run: |
        response=$(curl -sSI https://localhost)
  
        # Check the HTTP response code
        http_status=$(echo "$response" | head -n 1 | cut -d ' ' -f 2)
  
        if [ "$http_status" = "200" ]; then
          echo "Service is running and responded with HTTP 200 OK"
        else
          echo "Service did not respond with HTTP 200 OK"
          exit 1
        fi



# Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
# - name: Update dependency graph
#   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
