# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B package --file s3/pom.xml
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: s3-artifact
        path: s3/target/s3-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: s3-artifact
        
    - name: Execute Jar File
      run: |
        sudo kill -9 $(sudo lsof -t -i:80) || true  # Stop any previous service running on port 80
        sudo java -jar s3/target/s3-0.0.1-SNAPSHOT.jar &

    # Optional: Wait for your service to start before completing the job
    - name: Wait for Service to Start
      run: sleep 10  # Adjust as needed, depending on your service's startup time

    #Optional: Perform any tests or validation
    # - name: Test Service
    #   run: |
    #     response=$(curl -sS http://3.87.0.181:8080)
    #     # Use curl to send a GET request to your service's endpoint

    #     # Check the HTTP response code (e.g., 200 for success)
    #     http_status=$(echo "$response" | head -n 1 | cut -d ' ' -f 2)

    #     if [ "$http_status" = "200" ]; then
    #       echo "Service is running and responded with HTTP 200 OK"
    #       # Add additional validation checks if needed
    #     else
    #       echo "Service did not respond with HTTP 200 OK"
    #       # You can add more error handling or notifications here
    #       exit 1  # Exit with an error code
    #     fi
    # Optional: Deploy additional services or configurations as needed
    # ...

# Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
# - name: Update dependency graph
#   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
